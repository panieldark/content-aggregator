Incident: 
Oscar was assigned a ticket to create an S3 bucket and hand over / vault the access and secret keys. The 
ticket was addressed two weeks later (timestamps in comments: 
https://gemini-spaceship.atlassian.net/browse/OPS-11819), despite multiple pings in comments, a direct DM 
that was ignored, a ping from Bill that was ignored, and only was addressed once escalated by Noah. 
During this time, one of our frontend engineers was blocked, and the S3 upload/download progress was 
checked in several times from product + project management, poking around for why progress has not been 
made.

Once the ticket was addressed, a PR was merged to create bucket, with no information on how to use, 
bucket name, access key, secret key, etc. Going off of the S3 client wrapper usages in the codebase, this 
was a small  headscratcher, but eventually it came out that instead of access+secret key use, we will be 
using a role (again, only finding this out after poking and prodding information from Oscar a few times). 
[In a group convo with Bill], It seemed we were suddenly moving away from key usage to roles, with no 
documentation on that. It seemed that this was an SRE-wide initiative that should have proper 
docs/codebase usage/PRs explaining shift/confluence docs, but when asked, instead, we were instead met 
with some resistance to help and rude comments (“Does nobody on your team know how to use the AWS SDK? It 
should be super straight forward” “It should literally just work” “legit try it without that, thats all 
:shrug:”). Objectively, I also responded with my fair share of frustration, when met with the rude 
responses given (“Well I'm looking for, and have been asking for, any documentation on using an IAM role 
as the credentials provider using the SDK” and later, “What I do see in every single AWS SDK doc I've 
seen is using an access key + secret access key, so I would much appreciate a tad more input than just 
‘it should just be there’”).

Once Bill jumps in to see if there is any references that may be out there, he is also met with this same 
response (“The AWS SDK has all this built in. Can you guys just try and do some googling first”). I had 
indeed been doing a few hours of Googling + searching for any codebase usages/PRs (Bill had as well), and 
had not found any example where access + secret keys were not being used under the hood. Oscar then sent 
a link to a AWS doc (that I had seen) with a usage where secret keys weren’t being explicitly set via 
code (“Legit just don’t include that code. First link I googled”), however, right above, it explained 
under ‘Loading Credentials’ that secrets are being used under the hood. Eventually, I explained my 
understanding that for ec2 instance profiles still use access/secret keys that are configured on the ec2 
boxes themselves, hence that this would not be available for auth in QA and locally. 

Later, on a call with Ian Mulmat, Oscar was invited to the call. There was eventual back and forth 
between the two SREs, where I was just there on the call, where it was clear that the same attitude was 
given to Ian as well. Eventually, it came out that this shift from vaulted keys to using an ec2 instance 
profile was not an SRE-wide initiative, but instead was a change that Oscar tried to make, with us as the 
guinea pig (It seemed this was partly a cause of the two week turnaround time, especially since after the 
call, Ian setup the replacement S3 with vaulted secrets within 30 minutes). It came out that he had 
originally tried to make this change with the credit card team, but that someone on the team rejected the 
proposed shift. The reasoning he gave to Ian was that he didn’t want to get approval, and that “if we as 
a company aren’t capable of following the newest tech usage, …”. He was then condescending to Ian, 
explain that “literally anyone with a certificate would be able to understand this”. Ian explained that 
he was misunderstanding, and that it’s not about the change idea itself, but the fact that he was doing 
this without running it by anyone, giving a heads up to anyone across the dev organization, or writing up 
any docs on it. Ian then continued to explain that making this drastic a change in particular would have 
blown up the qa environment, had he not noticed and stepped in (a migration to use ec2 instance profiles 
as credentials would not have worked; it would have had to be set in every qa box; also, there are 
environments like Delta which are not hosted via AWS). 

Oscar instead saw Ian’s comments about it as rejecting the idea of the change itself, and began making 
ingenuine comments (“It’s fine if we need to revert this and continue contributing to the massive tech 
debt problem, I just thought this was a company that valued security. But if you (to both of us) don’t 
want to do this or can’t figure it out, then it’s out of my hands”). Eventually, it seemed that progress 
was not going to be made, and shortly after the call, Ian worked to address the ticket himself 
(successfully).

